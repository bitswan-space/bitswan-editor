{
  "name": "bitswan",
  "publisher": "LibertyAcesLtd",
  "displayName": "BitSwan",
  "description": "BitSwan extension for Visual Studio Code",
  "version": "0.0.5",
  "repository": {
    "type": "git",
    "url": "https://github.com/bitswan-space/bitswan-editor/tree/main/Extension"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:bitswan"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "colors": [
      {
        "id": "bitswan.statusIcon.green",
        "description": "Color for the green status icon.",
        "defaults": {
          "light": "#00FF00",
          "dark": "#00FF00",
          "highContrast": "#00FF00"
        }
      },
      {
        "id": "bitswan.statusIcon.orange",
        "description": "Color for the orange status icon.",
        "defaults": {
          "light": "#FFA500",
          "dark": "#FFA500",
          "highContrast": "#FFA500"
        }
      },
      {
        "id": "bitswan.statusIcon.red",
        "description": "Color for the red status icon.",
        "defaults": {
          "light": "#FF0000",
          "dark": "#FF0000",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "bitswan.statusIcon.gray",
        "description": "Color for the gray status icon.",
        "defaults": {
          "light": "#808080",
          "dark": "#808080",
          "highContrast": "#808080"
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "bitswan-pre-explorer",
          "title": "BitSwan",
          "icon": "resources/bitswan-logo.png"
        }
      ]
    },
    "views": {
      "bitswan-pre-explorer": [
        {
          "id": "bitswan",
          "name": "Pipelines"
        }
      ]
    },
    "commands": [
      {
        "command": "bitswan.deployPipeline",
        "title": "Deploy Pipeline",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "bitswan.addGitOps",
        "title": "Add GitOps",
        "icon": "$(add)"
      },
      {
        "command": "bitswan.editGitOps",
        "title": "Edit GitOps",
        "icon": "$(edit)"
      },
      {
        "command": "bitswan.deleteGitOps",
        "title": "Delete GitOps",
        "icon": "$(trash)"
      },
      {
        "command": "bitswan.activateGitOps",
        "title": "Activate GitOps",
        "icon": "$(check)"
      },
      {
        "command": "bitswan.refreshAutomations",
        "title": "Refresh Automations",
        "icon": "$(sync)"
      },
      {
        "command": "bitswan.activateAutomation",
        "title": "Activate Automation",
        "icon": "$(notebook-state-success)"
      },
      {
        "command": "bitswan.deactivateAutomation",
        "title": "Deactivate Automation",
        "icon": "$(circle-slash)"
      },
      {
        "command": "bitswan.deleteAutomation",
        "title": "Delete Automation",
        "icon": "$(terminal-kill)"
      },
      {
        "command": "bitswan.stopAutomation",
        "title": "Stop Automation",
        "icon": "$(debug-stop)"
      },
      {
        "command": "bitswan.startAutomation",
        "title": "Start Automation",
        "icon": "$(debug-continue)"
      },
      {
        "command": "bitswan.restartAutomation",
        "title": "Restart Automation",
        "icon": "$(debug-restart)"
      },
      {
        "command": "bitswan.showAutomationLogs",
        "title": "Show Logs",
        "icon": "$(output)"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "bitswan.deployPipeline",
          "when": "view == bitswan && viewItem == folder",
          "group": "inline"
        },
        {
          "command": "bitswan.editGitOps",
          "when": "view == bitswan && viewItem == gitops",
          "group": "inline"
        },
        {
          "command": "bitswan.deleteGitOps",
          "when": "view == bitswan && viewItem == gitops",
          "group": "inline"
        },
        {
          "command": "bitswan.activateGitOps",
          "when": "view == bitswan && viewItem == gitops",
          "group": "inline"
        },
        {
          "command": "bitswan.addGitOps",
          "when": "view == bitswan && viewItem == gitopsSection",
          "group": "inline"
        },
        {
          "command": "bitswan.refreshAutomations",
          "when": "view == bitswan && viewItem == automationSection",
          "group": "inline"
        },
        {
          "command": "bitswan.activateAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,inactive,/",
          "group": "inline@3"
        },
        {
          "command": "bitswan.deactivateAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,active,/",
          "group": "inline@3"
        },
        {
          "command": "bitswan.stopAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,active,running$/",
          "group": "inline@1"
        },
        {
          "command": "bitswan.startAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,active,(paused|exited)$/",
          "group": "inline@1"
        },
        {
          "command": "bitswan.deleteAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,/",
          "group": "inline@4"
        },
        {
          "command": "bitswan.restartAutomation",
          "when": "view == bitswan && viewItem =~ /^automation,active/",
          "group": "inline@2"
        },
        {
          "command": "bitswan.showAutomationLogs",
          "when": "view == bitswan && viewItem =~ /^automation,active/",
          "group": "inline@5"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "bitswan.deployPipeline",
          "when": "notebookType == 'jupyter-notebook'",
          "group": "navigation@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@types/node": "^14.14.37",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "eslint": "^7.24.0",
    "typescript": "^4.2.4"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "form-data": "^4.0.0",
    "jszip": "^3.10.1",
    "vsce": "^2.15.0"
  }
}
